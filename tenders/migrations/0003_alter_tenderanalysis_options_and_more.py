# Generated by Django 5.2.3 on 2025-07-02 20:45

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("subcontractors", "0002_alter_subcontractor_email"),
        ("tenders", "0002_alter_tenderinvitation_status"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="tenderanalysis",
            options={
                "ordering": ["-analysis_date"],
                "verbose_name": "Tender Analysis",
                "verbose_name_plural": "Tender Analyses",
            },
        ),
        migrations.AlterModelOptions(
            name="tenderquestion",
            options={
                "ordering": ["-priority", "-created_at"],
                "verbose_name": "Tender Question",
                "verbose_name_plural": "Tender Questions",
            },
        ),
        migrations.RemoveField(
            model_name="tenderanalysis",
            name="building_standards",
        ),
        migrations.RemoveField(
            model_name="tenderanalysis",
            name="cost_breakdown",
        ),
        migrations.RemoveField(
            model_name="tenderanalysis",
            name="environmental_requirements",
        ),
        migrations.RemoveField(
            model_name="tenderanalysis",
            name="estimated_value_range",
        ),
        migrations.RemoveField(
            model_name="tenderanalysis",
            name="health_safety_requirements",
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="analysis_method",
            field=models.CharField(
                default="Claude AI Analysis",
                help_text="Method used for analysis",
                max_length=100,
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="budget_estimates",
            field=models.TextField(
                blank=True,
                help_text="Budget analysis and cost estimates based on scope review",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="clarification_needed",
            field=models.BooleanField(
                default=False,
                help_text="Whether clarification questions need to be raised",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="compliance_requirements",
            field=models.JSONField(
                default=list,
                help_text="List of compliance requirements including regulations and standards",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="contract_information",
            field=models.JSONField(
                default=dict,
                help_text="Detailed contract information including terms, conditions, and requirements",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="contract_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("JCT_STANDARD", "JCT Standard Building Contract"),
                    ("JCT_DESIGN_BUILD", "JCT Design and Build Contract"),
                    ("JCT_MINOR_WORKS", "JCT Minor Works Contract"),
                    ("NEC4", "NEC4 Engineering and Construction Contract"),
                    ("FIDIC", "FIDIC Conditions of Contract"),
                    ("BESPOKE", "Bespoke Contract"),
                    ("OTHER", "Other"),
                ],
                help_text="Type of construction contract",
                max_length=100,
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="coordination_requirements",
            field=models.TextField(
                blank=True,
                help_text="Multi-trade coordination and interface requirements",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="environmental_considerations",
            field=models.TextField(
                blank=True,
                help_text="Environmental requirements and sustainability measures",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="estimated_project_value",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Estimated total project value in GBP",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="handover_date",
            field=models.DateField(
                blank=True, help_text="Final handover date", null=True
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="insurance_requirements",
            field=models.TextField(
                blank=True, help_text="Insurance requirements and coverage levels"
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="key_opportunities",
            field=models.JSONField(
                default=list,
                help_text="List of key opportunities for value engineering or efficiency gains",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="liquidated_damages",
            field=models.TextField(
                blank=True, help_text="Liquidated damages clauses and rates"
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="payment_terms",
            field=models.TextField(
                blank=True, help_text="Payment terms and conditions"
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="possession_date",
            field=models.DateField(
                blank=True, help_text="Site possession date", null=True
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="practical_completion_date",
            field=models.DateField(
                blank=True, help_text="Practical completion date", null=True
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="procurement_strategy",
            field=models.TextField(
                blank=True,
                help_text="Recommended procurement strategy for subcontractors and materials",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="quality_requirements",
            field=models.TextField(
                blank=True, help_text="Quality standards and requirements"
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="recommended_actions",
            field=models.JSONField(
                default=list, help_text="List of recommended actions based on analysis"
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="risk_assessment",
            field=models.TextField(
                default=django.utils.timezone.now,
                help_text="Comprehensive risk assessment including identified risks and site conditions",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="safety_requirements",
            field=models.TextField(
                blank=True, help_text="Health and safety requirements and regulations"
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="start_on_site_date",
            field=models.DateField(
                blank=True, help_text="Start on site date", null=True
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="subcontractor_requirements",
            field=models.JSONField(
                default=list,
                help_text="List of subcontractor requirements and qualifications",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="timeline_analysis",
            field=models.TextField(
                blank=True,
                help_text="Project timeline analysis including duration, milestones, and critical path",
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="updated_date",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="value_range_max",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Maximum estimated project value",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="tenderanalysis",
            name="value_range_min",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Minimum estimated project value",
                max_digits=12,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="tenderquestion",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_questions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tenderquestion",
            name="reference_document",
            field=models.CharField(
                blank=True, help_text="Reference document or section", max_length=200
            ),
        ),
        migrations.AddField(
            model_name="tenderquestion",
            name="tender_analysis",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="clarification_questions",
                to="tenders.tenderanalysis",
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="analysis_confidence",
            field=models.FloatField(
                default=0.0,
                help_text="AI confidence score (0-100) for the analysis accuracy",
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="critical_milestones",
            field=models.JSONField(
                default=list, help_text="List of critical project milestones with dates"
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="documents_analyzed",
            field=models.JSONField(
                default=list, help_text="List of documents that were analyzed"
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="identified_risks",
            field=models.JSONField(
                default=list, help_text="List of specific identified risks"
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="key_requirements",
            field=models.JSONField(
                default=list,
                help_text="List of key project requirements including trades, compliance, quality, and safety",
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="project_duration_weeks",
            field=models.IntegerField(
                blank=True, help_text="Estimated project duration in weeks", null=True
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="project_overview",
            field=models.TextField(
                help_text="Comprehensive project overview including client, location, and high-level scope"
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="risk_level",
            field=models.CharField(
                choices=[
                    ("LOW", "Low Risk"),
                    ("MEDIUM", "Medium Risk"),
                    ("HIGH", "High Risk"),
                ],
                default="MEDIUM",
                help_text="Overall project risk level assessment",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="scope_of_work",
            field=models.TextField(
                help_text="Detailed scope of work including technical specifications and coordination requirements"
            ),
        ),
        migrations.AlterField(
            model_name="tenderanalysis",
            name="technical_specifications",
            field=models.TextField(
                blank=True,
                help_text="Technical specifications including drawings, standards, and materials",
            ),
        ),
        migrations.AlterField(
            model_name="tenderquestion",
            name="answer_text",
            field=models.TextField(blank=True, help_text="Answer to the question"),
        ),
        migrations.AlterField(
            model_name="tenderquestion",
            name="answered_at",
            field=models.DateTimeField(
                blank=True, help_text="When the question was answered", null=True
            ),
        ),
        migrations.AlterField(
            model_name="tenderquestion",
            name="answered_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="answered_questions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="tenderquestion",
            name="category",
            field=models.CharField(
                choices=[
                    ("TECHNICAL", "Technical"),
                    ("COMMERCIAL", "Commercial"),
                    ("PROGRAM", "Programme"),
                    ("RISK", "Risk Management"),
                    ("COMPLIANCE", "Compliance"),
                    ("QUALITY", "Quality"),
                    ("SAFETY", "Health & Safety"),
                    ("ENVIRONMENTAL", "Environmental"),
                    ("COORDINATION", "Coordination"),
                    ("OTHER", "Other"),
                ],
                help_text="Question category",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="tenderquestion",
            name="is_answered",
            field=models.BooleanField(
                default=False, help_text="Whether this question has been answered"
            ),
        ),
        migrations.AlterField(
            model_name="tenderquestion",
            name="priority",
            field=models.CharField(
                choices=[
                    ("CRITICAL", "Critical"),
                    ("HIGH", "High Priority"),
                    ("MEDIUM", "Medium Priority"),
                    ("LOW", "Low Priority"),
                ],
                default="MEDIUM",
                help_text="Question priority level",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="tenderquestion",
            name="question_text",
            field=models.TextField(help_text="The clarification question"),
        ),
        migrations.CreateModel(
            name="SubcontractorRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "trade_category",
                    models.CharField(
                        choices=[
                            ("GROUNDWORKS", "Groundworks"),
                            ("CONCRETE", "Concrete Works"),
                            ("BRICKWORK", "Brickwork"),
                            ("ROOFING", "Roofing"),
                            ("CARPENTRY", "Carpentry"),
                            ("STEELWORK", "Steelwork"),
                            ("M&E", "Mechanical & Electrical"),
                            ("PLUMBING", "Plumbing"),
                            ("ELECTRICAL", "Electrical"),
                            ("PLASTERING", "Plastering"),
                            ("FLOORING", "Flooring"),
                            ("PAINTING", "Painting & Decorating"),
                            ("GLAZING", "Glazing"),
                            ("INSULATION", "Insulation"),
                            ("DEMOLITION", "Demolition"),
                            ("SCAFFOLDING", "Scaffolding"),
                            ("PLANT_HIRE", "Plant Hire"),
                            ("WASTE_MANAGEMENT", "Waste Management"),
                            ("SECURITY", "Security"),
                            ("CLEANING", "Cleaning"),
                            ("OTHER", "Other Specialist Trade"),
                        ],
                        help_text="Trade category for this recommendation",
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("CRITICAL", "Critical"),
                            ("HIGH", "High Priority"),
                            ("MEDIUM", "Medium Priority"),
                            ("LOW", "Low Priority"),
                        ],
                        default="MEDIUM",
                        help_text="Priority level for this trade package",
                        max_length=20,
                    ),
                ),
                (
                    "suitability_score",
                    models.FloatField(
                        default=0.0, help_text="Overall suitability score (0-100)"
                    ),
                ),
                (
                    "experience_match",
                    models.FloatField(
                        default=0.0, help_text="Experience match score (0-100)"
                    ),
                ),
                (
                    "location_proximity",
                    models.FloatField(
                        default=0.0, help_text="Location proximity score (0-100)"
                    ),
                ),
                (
                    "past_performance",
                    models.FloatField(
                        default=0.0, help_text="Past performance score (0-100)"
                    ),
                ),
                (
                    "capacity_score",
                    models.FloatField(
                        default=0.0, help_text="Current capacity score (0-100)"
                    ),
                ),
                (
                    "required_experience",
                    models.TextField(
                        blank=True, help_text="Required experience for this trade"
                    ),
                ),
                (
                    "required_certifications",
                    models.JSONField(
                        default=list, help_text="List of required certifications"
                    ),
                ),
                (
                    "estimated_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated package value",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "strengths",
                    models.JSONField(
                        default=list, help_text="List of subcontractor strengths"
                    ),
                ),
                (
                    "concerns",
                    models.JSONField(
                        default=list, help_text="List of potential concerns"
                    ),
                ),
                (
                    "recommendation_notes",
                    models.TextField(
                        blank=True, help_text="Additional recommendation notes"
                    ),
                ),
                (
                    "is_recommended",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this subcontractor is recommended",
                    ),
                ),
                (
                    "is_contacted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the subcontractor has been contacted",
                    ),
                ),
                (
                    "response_received",
                    models.BooleanField(
                        default=False, help_text="Whether a response has been received"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this recommendation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subcontractor",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific subcontractor recommendation (optional)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="subcontractors.subcontractor",
                    ),
                ),
                (
                    "tender_analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcontractor_recommendations",
                        to="tenders.tenderanalysis",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subcontractor Recommendation",
                "verbose_name_plural": "Subcontractor Recommendations",
                "ordering": ["-priority", "-suitability_score", "trade_category"],
                "unique_together": {
                    ("tender_analysis", "subcontractor", "trade_category")
                },
            },
        ),
    ]
